{"version":3,"sources":["assets/Script/HelloWorld.js"],"names":["window","_Gloabal","Client_Version","JS_LOG","arg","cc","log","Class","Component","properties","ModuleMagPreFab","Prefab","moduleLayer","Node","msgLayer","onLoad","hackSysLog","jsb","fileUtils","getWritablePath","_G_AppCom","_AppCom","getComponent","moduleMagObj","instantiate","parent","_G_moduleMag","initCom","execUnpackage","reqVersionInfo","reloadLobbyRoot","reqLoopVersionInfo","loadAb","hotUpdateMultiModule","addModule","moduleObj","abObj","getABObj","load","err","prefab","JSON","stringify","_lobbyRootNode","destroy","lobbyRoot","addChild","initModule","systemEvent","on","SystemEvent","EventType","KEY_UP","onKeyUp","onDestroy","off","event","sys","os","OS_WINDOWS","GGloabal","IS_SIMULATOR","keyCode","hackSys_Log_Save","_logArr","totalLen","length","reportCo","beginIdx","arrTemp","i","push","retMsg","join","writeStringToFile","_initHackLog","MAX_STR_LEN","excludeStr","push_log","ignore","logStr","strLen","idx","endIdx","splitStr","slice","excStr","indexOf","logDef","_sv_log_2_Ori","call","consoleLogDef","_sv_console_2_logOri","console"],"mappings":";;;;;;;;AAEAA,MAAM,CAACC,QAAP,GAAkB;AACdC,EAAAA,cAAc,EAAG,OADH,CACa;;AADb,CAAlB;;AAIA,IAAIC,MAAM,GAAG,SAATA,MAAS,GAAgB;AAAA;;AAAA,oCAAJC,GAAI;AAAJA,IAAAA,GAAI;AAAA;;AACzB,SAAAC,EAAE,EAACC,GAAH,aAAO,cAAP,SAAyBF,GAAzB;AACH,CAFD;;AAKAC,EAAE,CAACE,KAAH;AACI,aAASF,EAAE,CAACG,SADhB;AAEIC,EAAAA,UAAU,EAAE;AACRC,IAAAA,eAAe,EAAGL,EAAE,CAACM,MADb;AAGRC,IAAAA,WAAW,EAAGP,EAAE,CAACQ,IAHT;AAIRC,IAAAA,QAAQ,EAAGT,EAAE,CAACQ;AAJN,GAFhB;AAUIE,EAAAA,MAAM,EAAE,kBAAY;AAAA;;AAEhB,SAAKC,UAAL;AACAb,IAAAA,MAAM,CAAC,gBAAD,EAAmBc,GAAG,CAACC,SAAJ,CAAcC,eAAd,EAAnB,CAAN;AAEAnB,IAAAA,MAAM,CAACoB,SAAP,GAAmB,KAAKC,OAAL,GAAe,KAAKC,YAAL,CAAkB,QAAlB,CAAlC,CALgB,CAQhB;AACA;;AACA,QAAIC,YAAY,GAAMlB,EAAE,CAACmB,WAAH,CAAe,KAAKd,eAApB,CAAtB;AACAa,IAAAA,YAAY,CAACE,MAAb,GAAsB,KAAKX,QAA3B;AACAd,IAAAA,MAAM,CAAC0B,YAAP,GAAsBH,YAAY,CAACD,YAAb,CAA0B,eAA1B,CAAtB;;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,CACjB;AADiB,KAArB,EAbgB,CAiBhB;AAEA;;;AACAD,IAAAA,YAAY,CAACE,aAAb,CAA2B,YAAI;AAE3BF,MAAAA,YAAY,CAACG,cAAb,CAA4B,YAAI;AAAE;AAC9B,QAAA,KAAI,CAACC,eAAL;AACH,OAFD;AAGH,KALD,EApBgB,CA2BhB;;;AACAJ,IAAAA,YAAY,CAACK,kBAAb;AAEH,GAxCL;AA0CID,EAAAA,eA1CJ,6BA0CqB;AAAA;;AAEb,QAAIE,MAAM,GAAG,CAAC,SAAD,CAAb,CAFa,CAGb;;AACAN,IAAAA,YAAY,CAACO,oBAAb,CAAkCD,MAAlC,EAAyC,YAAI;AAAE;AAE3CN,MAAAA,YAAY,CAACQ,SAAb,CAAuB,SAAvB,EAAkC,UAACC,SAAD,EAAa;AAAE;AAE7C,YAAIC,KAAK,GAAGD,SAAS,CAACE,QAAV,EAAZ;AAEAD,QAAAA,KAAK,CAACE,IAAN,CAAW,sBAAX,EAAmCjC,EAAE,CAACM,MAAtC,EAA8C,UAAC4B,GAAD,EAAMC,MAAN,EAAe;AAAG;AAE5DrC,UAAAA,MAAM,CAAC,qBAAD,EAAwBsC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAxB,CAAN;;AACA,cAAG,MAAI,CAACI,cAAR,EAAuB;AACnB,YAAA,MAAI,CAACA,cAAL,CAAoBC,OAApB;AACH;;AACD,cAAIC,SAAS,GAAGxC,EAAE,CAACmB,WAAH,CAAegB,MAAf,CAAhB;AACA,UAAA,MAAI,CAACG,cAAL,GAAsBE,SAAtB;;AACA,UAAA,MAAI,CAACjC,WAAL,CAAiBkC,QAAjB,CAA0BD,SAA1B,EAAqC,GAArC;;AACAA,UAAAA,SAAS,CAACvB,YAAV,CAAuB,WAAvB,EAAoCyB,UAApC;AAEH,SAXD;AAYH,OAhBD;AAiBH,KAnBD;AAoBH;AAlEL,2CAqEY;AACJ1C,EAAAA,EAAE,CAAC2C,WAAH,CAAeC,EAAf,CAAkB5C,EAAE,CAAC6C,WAAH,CAAeC,SAAf,CAAyBC,MAA3C,EAAmD,KAAKC,OAAxD,EAAiE,IAAjE;AACH,CAvEL,YAwEIC,SAxEJ,wBAwEiB;AACTjD,EAAAA,EAAE,CAAC2C,WAAH,CAAeO,GAAf,CAAmBlD,EAAE,CAAC6C,WAAH,CAAeC,SAAf,CAAyBC,MAA5C,EAAoD,KAAKC,OAAzD,EAAkE,IAAlE;AACH,CA1EL,YA4EIA,OA5EJ,oBA4EYG,KA5EZ,EA4EmB;AACX;AACA,MAAGnD,EAAE,CAACoD,GAAH,CAAOC,EAAP,IAAWrD,EAAE,CAACoD,GAAH,CAAOE,UAAlB,IAAgC,CAACC,QAAQ,CAACC,YAA1C,IAA0DL,KAAK,CAACM,OAAN,IAAe,CAA5E,EAA8E;AAC1E,SAAKC,gBAAL;AACH;AACJ,CAjFL,YAkFIA,gBAlFJ,+BAkFsB;AACd,MAAG,CAAC,KAAKC,OAAT,EAAiB;AAAE;AAAU;;AAAA;AAE7B,MAAIC,QAAQ,GAAG,KAAKD,OAAL,CAAaE,MAA5B;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA,MAAIC,QAAQ,GAAGH,QAAQ,GAACE,QAAxB;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,IAAE,CAAV,GAAYA,QAAZ,GAAqB,CAAhC;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,OAAI,IAAIC,CAAC,GAACF,QAAV,EAAoBE,CAAC,GAACL,QAAtB,EAAgCK,CAAC,EAAjC,EAAoC;AAChCD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAKP,OAAL,CAAaM,CAAb,CAAb;AACH;;AAED,MAAIE,MAAM,GAAGH,OAAO,CAACI,IAAR,CAAa,IAAb,CAAb;;AACA,MAAG,OAAOxD,GAAP,IAAY,WAAf,EAA2B;AACvBA,IAAAA,GAAG,CAACC,SAAJ,CAAcwD,iBAAd,CAAgCF,MAAhC,EAAwCvD,GAAG,CAACC,SAAJ,CAAcC,eAAd,KAAkC,eAA1E;AACH;AACJ,CAnGL,YAoGIH,UApGJ,yBAoGgB;AAAA;;AAER,MAAG,KAAK2D,YAAR,EAAqB;AAAE;AAAU;;AAAC;AAAE,OAAKA,YAAL,GAAoB,IAApB;AACpC,MAAIX,OAAO,GAAG,EAAd;AACA,OAAKA,OAAL,GAAeA,OAAf;AACA,MAAIY,WAAW,GAAG,IAAlB;AACA,MAAIC,UAAU,kCAAM,yCAAN,IAAiD,CAAjD,cAAd;;AACA,MAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAgB;AAC3B,QAAIC,MAAM,GAAG,KAAb;;AAD2B,uCAAJ3E,GAAI;AAAJA,MAAAA,GAAI;AAAA;;AAE3B,QAAI4E,MAAM,GAAG5E,GAAG,CAACqE,IAAJ,CAAS,GAAT,CAAb;AACA,QAAIQ,MAAM,GAAGD,MAAM,CAACd,MAApB;;AACA,SAAI,IAAIgB,GAAG,GAAG,CAAd,EAAgBA,GAAG,GAACD,MAApB,GAA4B;AACxB,UAAIE,MAAM,GAAGD,GAAG,GAACN,WAAjB;AAEA,UAAIQ,QAAQ,GAAGJ,MAAM,CAACK,KAAP,CAAaH,GAAb,EAAkBC,MAAlB,CAAf;;AACA,WAAI,IAAIG,MAAR,IAAmBT,UAAnB,EAA8B;AAC1B,YAAIO,QAAQ,CAACG,OAAT,CAAiBD,MAAjB,EAAyB,CAAzB,KAA+B,CAAnC,EAAsC;AAClCP,UAAAA,MAAM,GAAG,IAAT;AACA;AACH;AACJ;;AACD,UAAI,CAACA,MAAL,EAAa;AACTf,QAAAA,OAAO,CAACO,IAAR,CAAa,MAAIP,OAAO,CAACE,MAAZ,GAAmB,MAAnB,GAA2BkB,QAA3B,IAAsCD,MAAM,GAACF,MAAP,GAAc,KAAd,GAAoB,EAA1D,CAAb;AACH;;AAEDC,MAAAA,GAAG,GAAGC,MAAN;AACH;;AACD,WAAOJ,MAAP;AACH,GArBD;;AAsBA,MAAIS,MAAM,GAAG,SAATA,MAAS,GAAgB;AAAA,uCAAJpF,GAAI;AAAJA,MAAAA,GAAI;AAAA;;AACzB,QAAI2E,MAAM,GAAGD,QAAQ,MAAR,SAAY1E,GAAZ,CAAb;;AACA,QAAG,CAAC2E,MAAJ,EAAW;AAAA;;AACP,2BAAA1E,EAAE,CAACoF,aAAH,EAAiBC,IAAjB,2BAAsBrF,EAAtB,SAA6BD,GAA7B;AACH;AACJ,GALD;;AAMA,MAAIuF,aAAa,GAAG,SAAhBA,aAAgB,GAAgB;AAAA,uCAAJvF,GAAI;AAAJA,MAAAA,GAAI;AAAA;;AAChC,QAAI2E,MAAM,GAAGD,QAAQ,MAAR,SAAY1E,GAAZ,CAAb;;AACA,QAAG,CAAC2E,MAAJ,EAAW;AACP,UAAG1E,EAAE,CAACuF,oBAAN,EAA4B;AAAA;;AAAE,iCAAAvF,EAAE,CAACuF,oBAAH,EAAwBF,IAAxB,+BAA6BG,OAA7B,SAAwCzF,GAAxC;AAA+C;AAChF;AACJ,GALD;;AAMA,MAAG,CAACC,EAAE,CAACoF,aAAP,EAAqB;AAAEpF,IAAAA,EAAE,CAACoF,aAAH,GAAmBpF,EAAE,CAACC,GAAtB;AAA4B;;AACnD,MAAG,CAACD,EAAE,CAACuF,oBAAP,EAA4B;AAAEvF,IAAAA,EAAE,CAACuF,oBAAH,GAA0BC,OAAO,CAACvF,GAAlC;AAAwC;;AACtED,EAAAA,EAAE,CAACC,GAAH,GAAckF,MAAd;AACAK,EAAAA,OAAO,CAACvF,GAAR,GAAcqF,aAAd;AACH,CAjJL","sourceRoot":"/","sourcesContent":["\n\nwindow._Gloabal = { \n    Client_Version : \"1.0.0\" , //客户端大版本\n}\n\nlet JS_LOG = function(...arg){ \n    cc.log(\"[HelloWorld]\",...arg) ; \n}\n\n\ncc.Class({\n    extends: cc.Component, \n    properties: {\n        ModuleMagPreFab : cc.Prefab ,\n\n        moduleLayer : cc.Node , \n        msgLayer : cc.Node ,\n\n    },\n\n    onLoad: function () {  \n\n        this.hackSysLog()\n        JS_LOG(\"jsb_writable_:\", jsb.fileUtils.getWritablePath() )\n\n        window._G_AppCom = this._AppCom = this.getComponent(\"AppCom\")\n\n\n        // 配置热更新地址到 ModuleConst.js\n        // 初始化\n        let moduleMagObj    = cc.instantiate(this.ModuleMagPreFab)\n        moduleMagObj.parent = this.msgLayer  \n        window._G_moduleMag = moduleMagObj.getComponent(\"ModuleManager\")  \n        _G_moduleMag.initCom({\n            // useHotUpdate : true ,     // 是否启用热更新 \n        }) \n        \n        //-------------------\n\n        // 复制包内模块到可读写路径下,避免首次加载模块时从远程完整拉取\n        _G_moduleMag.execUnpackage(()=>{\n\n            _G_moduleMag.reqVersionInfo(()=>{ // 获取最新版本\n                this.reloadLobbyRoot()\n            })\n        })\n\n        // 定时检测更新\n        _G_moduleMag.reqLoopVersionInfo() \n\n    },\n\n    reloadLobbyRoot(){\n\n        let loadAb = [\"ABLobby\"]\n        // loadAb = [\"ABLobby\", \"ABSubGame1\", \"ABSubGame2\"]\n        _G_moduleMag.hotUpdateMultiModule(loadAb,()=>{ // 更新模块到最新版本\n\n            _G_moduleMag.addModule(\"ABLobby\", (moduleObj)=>{ // 加载模块\n\n                let abObj = moduleObj.getABObj()\n                \n                abObj.load('root/Scene/LobbyRoot', cc.Prefab, (err, prefab)=>{  // 使用模块资源 \n\n                    JS_LOG(\"load_lobby_prefab_:\", JSON.stringify(err) )\n                    if(this._lobbyRootNode){\n                        this._lobbyRootNode.destroy()\n                    }\n                    let lobbyRoot = cc.instantiate(prefab) \n                    this._lobbyRootNode = lobbyRoot\n                    this.moduleLayer.addChild(lobbyRoot, 100)\n                    lobbyRoot.getComponent(\"LobbyRoot\").initModule()    \n    \n                }) \n            })\n        })\n    },\n\n\n    onLoad(){\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n    onDestroy () { \n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    onKeyUp(event) { \n        // 9 -- TAB  \n        if(cc.sys.os==cc.sys.OS_WINDOWS && !GGloabal.IS_SIMULATOR && event.keyCode==9){\n            this.hackSys_Log_Save()\n        } \n    },\n    hackSys_Log_Save(){\n        if(!this._logArr){ return ; };\n\n        let totalLen = this._logArr.length\n        let reportCo = 2000\n        let beginIdx = totalLen-reportCo\n        beginIdx = beginIdx>=0?beginIdx:0\n        let arrTemp = []\n\n        for(let i=beginIdx; i<totalLen; i++){\n            arrTemp.push(this._logArr[i])\n        }\n\n        let retMsg = arrTemp.join(\"\\n\")\n        if(typeof jsb!=\"undefined\"){\n            jsb.fileUtils.writeStringToFile(retMsg, jsb.fileUtils.getWritablePath() + \"logRecord.txt\")\n        }\n    },\n    hackSysLog(){\n\n        if(this._initHackLog){ return ; } ; this._initHackLog = true ; \n        let _logArr = []\n        this._logArr = _logArr \n        let MAX_STR_LEN = 1300 \n        let excludeStr = { [\"Can't find letter definition in texture\"]:1 } \n        let push_log = function(...arg){  \n            let ignore = false\n            let logStr = arg.join(\" \")\n            let strLen = logStr.length\n            for(let idx = 0;idx<strLen;){\n                let endIdx = idx+MAX_STR_LEN\n\n                let splitStr = logStr.slice(idx, endIdx)\n                for(let excStr in  excludeStr){\n                    if( splitStr.indexOf(excStr, 0) == 0 ){\n                        ignore = true \n                        break \n                    }\n                }\n                if( !ignore ){\n                    _logArr.push(\"_\"+_logArr.length+\"_=> \"+ splitStr +(endIdx<strLen?\"-->\":\"\")) \n                } \n\n                idx = endIdx\n            } \n            return ignore\n        } \n        let logDef = function(...arg){ \n            let ignore = push_log(...arg)\n            if(!ignore){\n                cc._sv_log_2_Ori.call(cc, ...arg)\n            }\n        }\n        let consoleLogDef = function(...arg){ \n            let ignore = push_log(...arg) \n            if(!ignore){\n                if(cc._sv_console_2_logOri) { cc._sv_console_2_logOri.call(console,...arg ) }\n            } \n        }\n        if(!cc._sv_log_2_Ori){ cc._sv_log_2_Ori = cc.log  }\n        if(!cc._sv_console_2_logOri){ cc._sv_console_2_logOri = console.log  }\n        cc.log      = logDef\n        console.log = consoleLogDef\n    },\n\n\n});\n"]}